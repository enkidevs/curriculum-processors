{
  "type": "root",
  "children": [
    {
      "type": "yaml",
      "value": "author: jfarmer\n\nlevels:\n\n  - beginner\n  - basic\n  - medium\n  - advanced\n\ntype: normal\n\ncategory: must-know\n\nlinks:\n    - >-\n        [Why is it safer to keep the tree balanced?](http://stackoverflow.com/questions/8015630/definition-of-a-balanced-tree){website}\n\nparent: removing-keys-from-a-binary-search-tree",
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 20,
          "column": 4,
          "offset": 317
        },
        "indent": [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      },
      "data": {
        "parsedValue": {
          "author": "jfarmer",
          "levels": [
            "beginner",
            "basic",
            "medium",
            "advanced"
          ],
          "type": "normal",
          "category": "must-know",
          "links": [
            {
              "name": "Why is it safer to keep the tree balanced?",
              "url": "http://stackoverflow.com/questions/8015630/definition-of-a-balanced-tree",
              "nature": "website"
            }
          ],
          "parent": "removing-keys-from-a-binary-search-tree"
        }
      }
    },
    {
      "type": "headline",
      "value": "Balanced vs. Unbalanced Binary Trees",
      "children": [
        {
          "type": "text",
          "value": "Balanced vs. Unbalanced Binary Trees",
          "position": {
            "start": {
              "line": 22,
              "column": 3,
              "offset": 321
            },
            "end": {
              "line": 22,
              "column": 39,
              "offset": 357
            },
            "indent": []
          }
        }
      ]
    },
    {
      "type": "section",
      "name": "Content",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A binary tree is called ",
              "position": {
                "start": {
                  "line": 27,
                  "column": 1,
                  "offset": 375
                },
                "end": {
                  "line": 27,
                  "column": 25,
                  "offset": 399
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "balanced",
                  "position": {
                    "start": {
                      "line": 27,
                      "column": 26,
                      "offset": 400
                    },
                    "end": {
                      "line": 27,
                      "column": 34,
                      "offset": 408
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 27,
                  "column": 25,
                  "offset": 399
                },
                "end": {
                  "line": 27,
                  "column": 35,
                  "offset": 409
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " if every leaf node is not more than a certain distance away from the root than any other leaf.  That is, if we take any two leaf nodes (including empty nodes), the distance between each node and the root is approximately the same.  In most cases \"approximately the same\" means the distance between the leaf and the root is not greater than 1, but the exact number can vary from application to application.",
              "position": {
                "start": {
                  "line": 27,
                  "column": 35,
                  "offset": 409
                },
                "end": {
                  "line": 27,
                  "column": 441,
                  "offset": 815
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 27,
              "column": 1,
              "offset": 375
            },
            "end": {
              "line": 27,
              "column": 441,
              "offset": 815
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This distance constraint ensures that it takes approximately the same amount of time to reach any leaf node in a binary tree from the root. A linked list is a kind of maximally-unbalanced binary tree.",
              "position": {
                "start": {
                  "line": 29,
                  "column": 1,
                  "offset": 817
                },
                "end": {
                  "line": 29,
                  "column": 201,
                  "offset": 1017
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 29,
              "column": 1,
              "offset": 817
            },
            "end": {
              "line": 29,
              "column": 201,
              "offset": 1017
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Consider the following unbalanced tree. The nodes that can be swapped to balance the tree are highlighted:",
              "position": {
                "start": {
                  "line": 31,
                  "column": 1,
                  "offset": 1019
                },
                "end": {
                  "line": 31,
                  "column": 107,
                  "offset": 1125
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 31,
              "column": 1,
              "offset": 1019
            },
            "end": {
              "line": 31,
              "column": 107,
              "offset": 1125
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "image",
              "title": null,
              "url": "%3Csvg%20width%3D%22100%25%22%20height%3D%22auto%22%20viewBox%3D%220%200%20700%20400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Ctitle%3EArtboard%3C%2Ftitle%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22M350%2095c19.329966%200%2035-15.6700338%2035-35%200-6.7781994-1.926799-13.1063707-5.262556-18.4666731C373.560339%2031.6072003%20362.551767%2025%20350%2025c-19.329966%200-35%2015.6700338-35%2035s15.670034%2035%2035%2035zM210%20195c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C233.560339%20131.6072%20222.551767%20125%20210%20125c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035zM100%20296c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C123.560339%20232.6072%20112.551767%20226%20100%20226c-19.3299662%200-35%2015.670034-35%2035s15.6700338%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%2F%3E%3Cpath%20d%3D%22M490%20195c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C513.560339%20131.6072%20502.551767%20125%20490%20125c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22465.996094%22%20y%3D%22174%22%3E10%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22197.998047%22%20y%3D%22177%22%3E3%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M600%20296c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C623.560339%20232.6072%20612.551767%20226%20600%20226c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22575.996094%22%20y%3D%22277%22%3E15%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M535%20375c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C558.560339%20311.6072%20547.551767%20305%20535%20305c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22510.996094%22%20y%3D%22356%22%3E13%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%2287.9980469%22%20y%3D%22277%22%3E1%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22337.998047%22%20y%3D%2276%22%3E8%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M325.305402%2085L232%20131.270754M376%2085l89.005263%2049.575516M125%20236.675909L185.724368%20186M516%20185l60.148477%2050.16054M561%20315.334131L575.702837%20285%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E",
              "alt": "unbalanced",
              "position": {
                "start": {
                  "line": 33,
                  "column": 1,
                  "offset": 1127
                },
                "end": {
                  "line": 33,
                  "column": 3539,
                  "offset": 4665
                },
                "indent": []
              },
              "svg": true
            }
          ],
          "position": {
            "start": {
              "line": 33,
              "column": 1,
              "offset": 1127
            },
            "end": {
              "line": 33,
              "column": 3539,
              "offset": 4665
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In order to balance the above tree, the ",
              "position": {
                "start": {
                  "line": 35,
                  "column": 1,
                  "offset": 4667
                },
                "end": {
                  "line": 35,
                  "column": 41,
                  "offset": 4707
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "10-15-13",
              "position": {
                "start": {
                  "line": 35,
                  "column": 41,
                  "offset": 4707
                },
                "end": {
                  "line": 35,
                  "column": 51,
                  "offset": 4717
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " subtree has to be \"rotated\":",
              "position": {
                "start": {
                  "line": 35,
                  "column": 51,
                  "offset": 4717
                },
                "end": {
                  "line": 35,
                  "column": 80,
                  "offset": 4746
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 35,
              "column": 1,
              "offset": 4667
            },
            "end": {
              "line": 35,
              "column": 80,
              "offset": 4746
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "image",
              "title": null,
              "url": "%3Csvg%20width%3D%22100%25%22%20height%3D%22auto%22%20viewBox%3D%220%200%20700%20300%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Ctitle%3EArtboard%3C%2Ftitle%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22M350%2085c19.329966%200%2035-15.6700338%2035-35%200-6.7781994-1.926799-13.1063707-5.262556-18.4666731C373.560339%2021.6072003%20362.551767%2015%20350%2015c-19.329966%200-35%2015.6700338-35%2035s15.670034%2035%2035%2035zM210%20185c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C233.560339%20121.6072%20222.551767%20115%20210%20115c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035zM100%20286c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C123.560339%20222.6072%20112.551767%20216%20100%20216c-19.3299662%200-35%2015.670034-35%2035s15.6700338%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%2F%3E%3Cpath%20d%3D%22M490%20185c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C513.560339%20121.6072%20502.551767%20115%20490%20115c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22465.996094%22%20y%3D%22164%22%3E13%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22197.998047%22%20y%3D%22167%22%3E3%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M600%20286c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C623.560339%20222.6072%20612.551767%20216%20600%20216c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22575.996094%22%20y%3D%22267%22%3E15%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M380%20285c19.329966%200%2035-15.670034%2035-35%200-6.778199-1.926799-13.106371-5.262556-18.466673C403.560339%20221.6072%20392.551767%20215%20380%20215c-19.329966%200-35%2015.670034-35%2035s15.670034%2035%2035%2035z%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%20fill%3D%22%23FFF%22%2F%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22355.996094%22%20y%3D%22266%22%3E10%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%2287.9980469%22%20y%3D%22267%22%3E1%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22RobotoMono-Light%2C%20Roboto%20Mono%22%20font-size%3D%2240%22%20font-weight%3D%22300%22%20fill%3D%22currentColor%22%3E%3Ctspan%20x%3D%22337.998047%22%20y%3D%2266%22%3E8%3C%2Ftspan%3E%3C%2Ftext%3E%3Cpath%20d%3D%22M325.305402%2075L232%20121.270754M376%2075l89.005263%2049.575516M125%20226.675909L185.724368%20176M516%20175l60.148477%2050.16054M405%20224.911949L464.957392%20175%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E",
              "alt": "balanced",
              "position": {
                "start": {
                  "line": 37,
                  "column": 1,
                  "offset": 4748
                },
                "end": {
                  "line": 37,
                  "column": 3537,
                  "offset": 8284
                },
                "indent": []
              },
              "svg": true
            }
          ],
          "position": {
            "start": {
              "line": 37,
              "column": 1,
              "offset": 4748
            },
            "end": {
              "line": 37,
              "column": 3537,
              "offset": 8284
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This is a problem for binary search trees (BSTs) because an ordered linked list is a BST and searching it is linear. Thus, a BST has log-time searching ",
              "position": {
                "start": {
                  "line": 40,
                  "column": 1,
                  "offset": 8287
                },
                "end": {
                  "line": 40,
                  "column": 153,
                  "offset": 8439
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "on average",
                  "position": {
                    "start": {
                      "line": 40,
                      "column": 154,
                      "offset": 8440
                    },
                    "end": {
                      "line": 40,
                      "column": 164,
                      "offset": 8450
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 40,
                  "column": 153,
                  "offset": 8439
                },
                "end": {
                  "line": 40,
                  "column": 165,
                  "offset": 8451
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", but a linear-time worst case.",
              "position": {
                "start": {
                  "line": 40,
                  "column": 165,
                  "offset": 8451
                },
                "end": {
                  "line": 40,
                  "column": 196,
                  "offset": 8482
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 40,
              "column": 1,
              "offset": 8287
            },
            "end": {
              "line": 40,
              "column": 196,
              "offset": 8482
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Solving this problem and guaranteeing that the tree remains more-or-less balanced is one of the main motivations behind more complex BST-like data structures, e.g. AVL trees",
              "position": {
                "start": {
                  "line": 42,
                  "column": 1,
                  "offset": 8484
                },
                "end": {
                  "line": 42,
                  "column": 174,
                  "offset": 8657
                },
                "indent": []
              }
            },
            {
              "type": "linkReference",
              "identifier": "1",
              "referenceType": "shortcut",
              "children": [
                {
                  "type": "text",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 42,
                      "column": 175,
                      "offset": 8658
                    },
                    "end": {
                      "line": 42,
                      "column": 176,
                      "offset": 8659
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 42,
                  "column": 174,
                  "offset": 8657
                },
                "end": {
                  "line": 42,
                  "column": 177,
                  "offset": 8660
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and red-black trees",
              "position": {
                "start": {
                  "line": 42,
                  "column": 177,
                  "offset": 8660
                },
                "end": {
                  "line": 42,
                  "column": 197,
                  "offset": 8680
                },
                "indent": []
              }
            },
            {
              "type": "linkReference",
              "identifier": "2",
              "referenceType": "shortcut",
              "children": [
                {
                  "type": "text",
                  "value": "2",
                  "position": {
                    "start": {
                      "line": 42,
                      "column": 198,
                      "offset": 8681
                    },
                    "end": {
                      "line": 42,
                      "column": 199,
                      "offset": 8682
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 42,
                  "column": 197,
                  "offset": 8680
                },
                "end": {
                  "line": 42,
                  "column": 200,
                  "offset": 8683
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 42,
                  "column": 200,
                  "offset": 8683
                },
                "end": {
                  "line": 42,
                  "column": 201,
                  "offset": 8684
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 42,
              "column": 1,
              "offset": 8484
            },
            "end": {
              "line": 42,
              "column": 201,
              "offset": 8684
            },
            "indent": []
          }
        }
      ]
    },
    {
      "type": "section",
      "name": "Revision",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Which of the following data structures is a type of ",
              "position": {
                "start": {
                  "line": 47,
                  "column": 1,
                  "offset": 8703
                },
                "end": {
                  "line": 47,
                  "column": 53,
                  "offset": 8755
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "maximally-unbalanced",
                  "position": {
                    "start": {
                      "line": 47,
                      "column": 54,
                      "offset": 8756
                    },
                    "end": {
                      "line": 47,
                      "column": 74,
                      "offset": 8776
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 47,
                  "column": 53,
                  "offset": 8755
                },
                "end": {
                  "line": 47,
                  "column": 75,
                  "offset": 8777
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " binary tree?",
              "position": {
                "start": {
                  "line": 47,
                  "column": 75,
                  "offset": 8777
                },
                "end": {
                  "line": 47,
                  "column": 88,
                  "offset": 8790
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 47,
              "column": 1,
              "offset": 8703
            },
            "end": {
              "line": 47,
              "column": 88,
              "offset": 8790
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "questionGap",
              "value": "???",
              "position": {
                "start": {
                  "line": 49,
                  "column": 1,
                  "offset": 8792
                },
                "end": {
                  "line": 49,
                  "column": 4,
                  "offset": 8795
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 49,
              "column": 1,
              "offset": 8792
            },
            "end": {
              "line": 49,
              "column": 4,
              "offset": 8795
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Ordered linked list",
                      "position": {
                        "start": {
                          "line": 50,
                          "column": 3,
                          "offset": 8798
                        },
                        "end": {
                          "line": 50,
                          "column": 22,
                          "offset": 8817
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 50,
                      "column": 3,
                      "offset": 8798
                    },
                    "end": {
                      "line": 50,
                      "column": 22,
                      "offset": 8817
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 50,
                  "column": 1,
                  "offset": 8796
                },
                "end": {
                  "line": 50,
                  "column": 22,
                  "offset": 8817
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Ordered array",
                      "position": {
                        "start": {
                          "line": 51,
                          "column": 3,
                          "offset": 8820
                        },
                        "end": {
                          "line": 51,
                          "column": 16,
                          "offset": 8833
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 51,
                      "column": 3,
                      "offset": 8820
                    },
                    "end": {
                      "line": 51,
                      "column": 16,
                      "offset": 8833
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 51,
                  "column": 1,
                  "offset": 8818
                },
                "end": {
                  "line": 51,
                  "column": 16,
                  "offset": 8833
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Weighted graph",
                      "position": {
                        "start": {
                          "line": 52,
                          "column": 3,
                          "offset": 8836
                        },
                        "end": {
                          "line": 52,
                          "column": 17,
                          "offset": 8850
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 52,
                      "column": 3,
                      "offset": 8836
                    },
                    "end": {
                      "line": 52,
                      "column": 17,
                      "offset": 8850
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 52,
                  "column": 1,
                  "offset": 8834
                },
                "end": {
                  "line": 52,
                  "column": 17,
                  "offset": 8850
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Max-heap",
                      "position": {
                        "start": {
                          "line": 53,
                          "column": 3,
                          "offset": 8853
                        },
                        "end": {
                          "line": 53,
                          "column": 11,
                          "offset": 8861
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 53,
                      "column": 3,
                      "offset": 8853
                    },
                    "end": {
                      "line": 53,
                      "column": 11,
                      "offset": 8861
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 53,
                  "column": 1,
                  "offset": 8851
                },
                "end": {
                  "line": 53,
                  "column": 11,
                  "offset": 8861
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 50,
              "column": 1,
              "offset": 8796
            },
            "end": {
              "line": 53,
              "column": 11,
              "offset": 8861
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ]
    },
    {
      "type": "section",
      "name": "Footnotes",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "linkReference",
              "identifier": "1: avl tree",
              "referenceType": "shortcut",
              "children": [
                {
                  "type": "text",
                  "value": "1: AVL tree",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 2,
                      "offset": 8882
                    },
                    "end": {
                      "line": 58,
                      "column": 13,
                      "offset": 8893
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 58,
                  "column": 1,
                  "offset": 8881
                },
                "end": {
                  "line": 58,
                  "column": 14,
                  "offset": 8894
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nSelf-balancing binary search tree, in which the height of the two child subtrees of any node differ by at most one.",
              "position": {
                "start": {
                  "line": 58,
                  "column": 14,
                  "offset": 8894
                },
                "end": {
                  "line": 59,
                  "column": 116,
                  "offset": 9010
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 58,
              "column": 1,
              "offset": 8881
            },
            "end": {
              "line": 59,
              "column": 116,
              "offset": 9010
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "linkReference",
              "identifier": "2: red-black tree",
              "referenceType": "shortcut",
              "children": [
                {
                  "type": "text",
                  "value": "2: Red-Black tree",
                  "position": {
                    "start": {
                      "line": 61,
                      "column": 2,
                      "offset": 9013
                    },
                    "end": {
                      "line": 61,
                      "column": 19,
                      "offset": 9030
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 61,
                  "column": 1,
                  "offset": 9012
                },
                "end": {
                  "line": 61,
                  "column": 20,
                  "offset": 9031
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nSelf-balancing binary search tree, in which nodes store an additional bit of data: whether the node is black or red. All of the tree's leaves must be black and, in case of a node being red, its two children must be black.",
              "position": {
                "start": {
                  "line": 61,
                  "column": 20,
                  "offset": 9031
                },
                "end": {
                  "line": 62,
                  "column": 222,
                  "offset": 9253
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 61,
              "column": 1,
              "offset": 9012
            },
            "end": {
              "line": 62,
              "column": 222,
              "offset": 9253
            },
            "indent": [
              1
            ]
          }
        }
      ]
    }
  ],
  "position": {
    "start": {
      "line": 1,
      "column": 1,
      "offset": 0
    },
    "end": {
      "line": 63,
      "column": 1,
      "offset": 9254
    }
  }
}
